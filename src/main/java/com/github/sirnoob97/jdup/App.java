/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.github.sirnoob97.jdup;

import org.apache.commons.codec.digest.DigestUtils;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.*;

public class App {
  private static Map<String, List<String>> hashes = new HashMap<>();

  public static void main(String[] args) throws IOException {
    var path = Path.of(args[0]);
    if (!Files.isDirectory(path) || !Files.exists(path)) {
      System.err.println("The path must be an existing direcotry!!");
      System.exit(1);
    }
    var files = Visitor.visitRootDir(visitor ->
        visitor.root(path)
            .files(new HashSet<>())
            .ignore(Set.of(".git")));

    files.stream()
//        .peek(System.out::println)
        .forEach(file -> put(hash(file), file));

    System.out.println("Duplicate files:");
    hashes.entrySet()
        .stream()
        .map(Map.Entry::getValue)
        .filter(list -> list.size() > 1)
        .flatMap(List::stream)
        .forEach(System.out::println);
  }

  public static String hash(Path file) {
    var hash = new String();
    try (var inputStream = Files.newInputStream(file)) {
      hash = DigestUtils.sha256Hex(inputStream);
    } catch (IOException e) {
      e.printStackTrace();
    }

    return hash;
  }

  public static void put(String hash, Path file) {
    if (hashes.containsKey(hash)) {
      hashes.get(hash).add(file.toString());
      return;
    }
    if (!hashes.containsKey(hash)) {
      var files = new ArrayList<String>();
      files.add(file.toString());

      hashes.put(hash, files);
    }
  }
}
